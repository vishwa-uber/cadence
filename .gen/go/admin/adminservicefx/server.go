// Code generated by thriftrw-plugin-yarpc
// @generated

package adminservicefx

import (
	fx "go.uber.org/fx"
	transport "go.uber.org/yarpc/api/transport"
	thrift "go.uber.org/yarpc/encoding/thrift"

	adminserviceserver "github.com/uber/cadence/.gen/go/admin/adminserviceserver"
)

// ServerParams defines the dependencies for the AdminService server.
type ServerParams struct {
	fx.In

	Handler adminserviceserver.Interface
}

// ServerResult defines the output of AdminService server module. It provides the
// procedures of a AdminService handler to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group. Dig 1.2 or newer
// must be used for this feature to work.
type ServerResult struct {
	fx.Out

	Procedures []transport.Procedure `group:"yarpcfx"`
}

// Server provides procedures for AdminService to an Fx application. It expects a
// adminservicefx.Interface to be present in the container.
//
//	fx.Provide(
//		func(h *MyAdminServiceHandler) adminserviceserver.Interface {
//			return h
//		},
//		adminservicefx.Server(),
//	)
func Server(opts ...thrift.RegisterOption) interface{} {
	return func(p ServerParams) ServerResult {
		procedures := adminserviceserver.New(p.Handler, opts...)
		return ServerResult{Procedures: procedures}
	}
}
