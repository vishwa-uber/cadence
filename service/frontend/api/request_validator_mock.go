// Code generated by MockGen. DO NOT EDIT.
// Source: request_validator.go
//
// Generated by this command:
//
//	mockgen -package api -source request_validator.go -destination request_validator_mock.go -self_package github.com/uber/cadence/service/frontend/api requestValidator
//

// Package api is a generated GoMock package.
package api

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	types "github.com/uber/cadence/common/types"
)

// MockRequestValidator is a mock of RequestValidator interface.
type MockRequestValidator struct {
	ctrl     *gomock.Controller
	recorder *MockRequestValidatorMockRecorder
	isgomock struct{}
}

// MockRequestValidatorMockRecorder is the mock recorder for MockRequestValidator.
type MockRequestValidatorMockRecorder struct {
	mock *MockRequestValidator
}

// NewMockRequestValidator creates a new mock instance.
func NewMockRequestValidator(ctrl *gomock.Controller) *MockRequestValidator {
	mock := &MockRequestValidator{ctrl: ctrl}
	mock.recorder = &MockRequestValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestValidator) EXPECT() *MockRequestValidatorMockRecorder {
	return m.recorder
}

// ValidateCountWorkflowExecutionsRequest mocks base method.
func (m *MockRequestValidator) ValidateCountWorkflowExecutionsRequest(arg0 context.Context, arg1 *types.CountWorkflowExecutionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCountWorkflowExecutionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateCountWorkflowExecutionsRequest indicates an expected call of ValidateCountWorkflowExecutionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateCountWorkflowExecutionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCountWorkflowExecutionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateCountWorkflowExecutionsRequest), arg0, arg1)
}

// ValidateDeleteDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateDeleteDomainRequest(arg0 context.Context, arg1 *types.DeleteDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateDeleteDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateDeleteDomainRequest indicates an expected call of ValidateDeleteDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateDeleteDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateDeleteDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateDeleteDomainRequest), arg0, arg1)
}

// ValidateDeprecateDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateDeprecateDomainRequest(arg0 context.Context, arg1 *types.DeprecateDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateDeprecateDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateDeprecateDomainRequest indicates an expected call of ValidateDeprecateDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateDeprecateDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateDeprecateDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateDeprecateDomainRequest), arg0, arg1)
}

// ValidateDescribeDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateDescribeDomainRequest(arg0 context.Context, arg1 *types.DescribeDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateDescribeDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateDescribeDomainRequest indicates an expected call of ValidateDescribeDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateDescribeDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateDescribeDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateDescribeDomainRequest), arg0, arg1)
}

// ValidateDescribeTaskListRequest mocks base method.
func (m *MockRequestValidator) ValidateDescribeTaskListRequest(arg0 context.Context, arg1 *types.DescribeTaskListRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateDescribeTaskListRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateDescribeTaskListRequest indicates an expected call of ValidateDescribeTaskListRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateDescribeTaskListRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateDescribeTaskListRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateDescribeTaskListRequest), arg0, arg1)
}

// ValidateGetTaskListsByDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateGetTaskListsByDomainRequest(arg0 context.Context, arg1 *types.GetTaskListsByDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateGetTaskListsByDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateGetTaskListsByDomainRequest indicates an expected call of ValidateGetTaskListsByDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateGetTaskListsByDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateGetTaskListsByDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateGetTaskListsByDomainRequest), arg0, arg1)
}

// ValidateListArchivedWorkflowExecutionsRequest mocks base method.
func (m *MockRequestValidator) ValidateListArchivedWorkflowExecutionsRequest(arg0 context.Context, arg1 *types.ListArchivedWorkflowExecutionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateListArchivedWorkflowExecutionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateListArchivedWorkflowExecutionsRequest indicates an expected call of ValidateListArchivedWorkflowExecutionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateListArchivedWorkflowExecutionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateListArchivedWorkflowExecutionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateListArchivedWorkflowExecutionsRequest), arg0, arg1)
}

// ValidateListClosedWorkflowExecutionsRequest mocks base method.
func (m *MockRequestValidator) ValidateListClosedWorkflowExecutionsRequest(arg0 context.Context, arg1 *types.ListClosedWorkflowExecutionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateListClosedWorkflowExecutionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateListClosedWorkflowExecutionsRequest indicates an expected call of ValidateListClosedWorkflowExecutionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateListClosedWorkflowExecutionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateListClosedWorkflowExecutionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateListClosedWorkflowExecutionsRequest), arg0, arg1)
}

// ValidateListOpenWorkflowExecutionsRequest mocks base method.
func (m *MockRequestValidator) ValidateListOpenWorkflowExecutionsRequest(arg0 context.Context, arg1 *types.ListOpenWorkflowExecutionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateListOpenWorkflowExecutionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateListOpenWorkflowExecutionsRequest indicates an expected call of ValidateListOpenWorkflowExecutionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateListOpenWorkflowExecutionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateListOpenWorkflowExecutionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateListOpenWorkflowExecutionsRequest), arg0, arg1)
}

// ValidateListTaskListPartitionsRequest mocks base method.
func (m *MockRequestValidator) ValidateListTaskListPartitionsRequest(arg0 context.Context, arg1 *types.ListTaskListPartitionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateListTaskListPartitionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateListTaskListPartitionsRequest indicates an expected call of ValidateListTaskListPartitionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateListTaskListPartitionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateListTaskListPartitionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateListTaskListPartitionsRequest), arg0, arg1)
}

// ValidateListWorkflowExecutionsRequest mocks base method.
func (m *MockRequestValidator) ValidateListWorkflowExecutionsRequest(arg0 context.Context, arg1 *types.ListWorkflowExecutionsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateListWorkflowExecutionsRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateListWorkflowExecutionsRequest indicates an expected call of ValidateListWorkflowExecutionsRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateListWorkflowExecutionsRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateListWorkflowExecutionsRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateListWorkflowExecutionsRequest), arg0, arg1)
}

// ValidateRefreshWorkflowTasksRequest mocks base method.
func (m *MockRequestValidator) ValidateRefreshWorkflowTasksRequest(arg0 context.Context, arg1 *types.RefreshWorkflowTasksRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRefreshWorkflowTasksRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRefreshWorkflowTasksRequest indicates an expected call of ValidateRefreshWorkflowTasksRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateRefreshWorkflowTasksRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRefreshWorkflowTasksRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateRefreshWorkflowTasksRequest), arg0, arg1)
}

// ValidateRegisterDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateRegisterDomainRequest(arg0 context.Context, arg1 *types.RegisterDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRegisterDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRegisterDomainRequest indicates an expected call of ValidateRegisterDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateRegisterDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRegisterDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateRegisterDomainRequest), arg0, arg1)
}

// ValidateResetStickyTaskListRequest mocks base method.
func (m *MockRequestValidator) ValidateResetStickyTaskListRequest(arg0 context.Context, arg1 *types.ResetStickyTaskListRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateResetStickyTaskListRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateResetStickyTaskListRequest indicates an expected call of ValidateResetStickyTaskListRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateResetStickyTaskListRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateResetStickyTaskListRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateResetStickyTaskListRequest), arg0, arg1)
}

// ValidateUpdateDomainRequest mocks base method.
func (m *MockRequestValidator) ValidateUpdateDomainRequest(arg0 context.Context, arg1 *types.UpdateDomainRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUpdateDomainRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateUpdateDomainRequest indicates an expected call of ValidateUpdateDomainRequest.
func (mr *MockRequestValidatorMockRecorder) ValidateUpdateDomainRequest(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUpdateDomainRequest", reflect.TypeOf((*MockRequestValidator)(nil).ValidateUpdateDomainRequest), arg0, arg1)
}
